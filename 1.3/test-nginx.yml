apiVersion: v1
kind: Namespace
metadata:
  name: nginx-reverseproxy

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reverse-config-map
  namespace: nginx-reverseproxy
data:
  nginx.conf: |
    events {}
    http {
      server {
        listen 80;
        server_name 127.0.0.1;

        location / {
            proxy_pass http://svc-proxy-beetroot:8080;     
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beetroot-deployment
  namespace: nginx-reverseproxy
  labels:
    app: beetroot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beetroot
  template:
    metadata:
      labels:
        app: beetroot
    spec:
      containers:
      - name: beetroot
        image: joachimo1/beetroot:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: nginx-reverseproxy
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/
      volumes:
      - name: nginx-conf
        configMap:
          name: reverse-config-map

---
apiVersion: v1
kind: Service
metadata:
  name: svc-proxy-nginx
  namespace: nginx-reverseproxy
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol:
      port: 80
      targetPort: 80
      nodePort: 30008

---
apiVersion: v1
kind: Service
metadata:
  name: svc-proxy-beetroot
  namespace: nginx-reverseproxy
spec:
  selector:
    app: beetroot
  ports:
    - protocol:
      port: 8080
      targetPort: 8080
